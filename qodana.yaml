#-------------------------------------------------------------------------------#
#               Qodana analysis is configured by qodana.yaml file               #
#             https://www.jetbrains.com/help/qodana/qodana-yaml.html            #
#-------------------------------------------------------------------------------#
version: "1.0"
#Specify inspection profile for code analysis
profile:
  name: qodana.starter
include:
  - name: All
    paths:
      - Qodana_check2/src
      - test1/src
#Enable inspections
#include:
#  - name: <SomeEnabledInspectionId>
#Disable inspections
#exclude:
#  - name: <SomeDisabledInspectionId>
#    paths:
#      - <path/where/not/run/inspection>
projectJDK: "23" #(Applied in CI/CD pipeline)
#Execute shell command before Qodana execution (Applied in CI/CD pipeline)
#bootstrap: sh ./prepare-qodana.sh
#Install IDE plugins before Qodana execution (Applied in CI/CD pipeline)
#plugins:
#  - id: <plugin.id> #(plugin id can be found at https://plugins.jetbrains.com)
#Specify Qodana linter for analysis (Applied in CI/CD pipeline)
linter: jetbrains/qodana-jvm:2024.3
include:
  - name: AssignmentToMethodParameter
  - name: AssignmentToLambdaParameter
  - name: ClassCoupling
  - name: ClassMayBeInterface
  - name: ClassNameDiffersFromFileName
  - name: EmptyClass
  - name: InterfaceMayBeAnnotatedFunctional
  - name: MultipleTopLevelClassesInFile
  - name: UtilityClassCanBeEnum
  - name: NonPublicClone
  - name: ObjectsEqualsCanBeSimplified
  - name: AssertMessageNotString
  - name: AssertionCanBeIf
  - name: SwitchExpressionCanBePushedDown
  - name: EnumSwitchStatementWhichMissesCases
  - name: OnDemandImport
  - name: MultiplyOrDivideByPowerOfTwo
  - name: EqualsCalledOnEnumConstant
  - name: CStyleArrayDeclaration
  - name: ConditionalCanBeOptional
  - name: LiteralAsArgToStringEquals
  - name: UnusedReturnValue
  - name: ReturnNull
